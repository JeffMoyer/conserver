#!/bin/bash

set -e

local=false && [ "$1" = "local" ] && local=true

[ -f conserver/version.h ] || { echo "you are in the wrong place" ; exit 1; }

ver=`./package/get-version number`
if [ ! -f ../conserver-$ver.tar.gz ] || $local; then
    (
	[ -d build ] && rm -rf build
        mkdir build
	git archive --format=tar.gz --prefix=conserver-$ver/ v$ver | (cd build; tar zxf -)
	cd build/conserver-$ver
	../../package/setup-configure
	rm -rf package
	sed -i "" -e "/^%define ver/s| ver.*| ver $ver|" contrib/redhat-rpm/conserver.spec
	sed -i "" -e "/^VERSION=/s|.*|VERSION=\"$ver\"|" contrib/solaris-package/pkginfo
    )
    $local && exit
    echo "Creating ../conserver-$ver.tar.gz"
    tar zcf ../conserver-$ver.tar.gz -C build conserver-$ver
    rm -rf build

    [ -f ../conserver-$ver.tar.gz.asc ] && rm ../conserver-$ver.tar.gz.asc
fi
if [ ! -f ../conserver-$ver.tar.gz.asc ]; then
    echo "Signing ../conserver-$ver.tar.gz"
    gpg -ab --local-user bryan@conserver.com ../conserver-$ver.tar.gz
fi
body="\`\`\`
`sed -ne '/^ver/,/^$/p' CHANGES | sed -e '/^$/,$d'`
\`\`\`"

ls -l ../conserver-$ver.tar.gz*
echo "Ready to push (y/N)?"
read i
if [ "$i" = "y" ]; then
    git tag -a -m "Release $ver" v$ver && git push
    githubrelease release conserver/conserver create --name conserver-$ver --body "$body" v$ver ../conserver-$ver.tar.gz* 
    echo You can publish this release on the website or with:
    echo "    "githubrelease release conserver/conserver publish v$ver
else
    echo Ok, here is the command I would have used:
    echo "    "git tag -a -m \""Release $ver"\" v$ver \&\& git push
    echo "    "githubrelease release conserver/conserver create --name conserver-$ver --body \""$body"\" v$ver ../conserver-$ver.tar.gz* 
fi
