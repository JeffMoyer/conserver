# $Id: README,v 4.2 92/07/27 08:47:14 ksb Exp $

BUGS:
	This program depends on a header file in ../conserver/cons.h,
	which is dones't know how to make.

What does it do?

 The console switch (conserver) uses some tty ports on a `switch machine' to
 read the output of many host machines.  Admins can use a client program
 (console) to connect to any console under control of the `switch'.  Thus from
 my terminal here on the second floor I can control the console for each of
 the machines in the machine room 3 floors below me!

 The `switch' host is monitored by an operator who sees all the error output
 from all the consoles (in a xterm here at PUCC).  This operator can call up a
 console on any machine in a flash and respond to problems.  He is aware of
 problems without having to poll many CRTs stacked out in the machine room --
 he and the tape drives can be in a quiet place.


What platforms?

 It runs under 4.2/4.3bsd, IBM's AIX6000, SunOS 4.X, and HPUX.
 Only the client runs under HPUX at this release.  It depends on
 select(2) and sockets.


What do I need to evaluate it?

 I believe a modem could be used in a pinch as a `host', anything that you can
 trick into producing tty I/O.  Even a dumb tty, but then you must do the
 echo.  Another port on the same machine was used for testing at one point...
 and an EPROM programmer might even work.


Who would be interested in this kind of thing?

 Anyone with more than one machine with a glass tty would love it, it also
 gets rid of the need for paper consoles.


Is this software restricted in distribution?

 Tom has an Ohio State copyright on the stuff, I'm sure that there will be no
 problem with distribution.  {He ripped the Purdue ECN copyright off the code
 he got, I didn't change his.}  Tom has not replied to any of my email in ~3
 months....


Why this version rather than any other?

 The PUCC version supports many more features (multiple `switch' machines for
 when you run out of ports; job control; down'd consoles, etc) than either the
 Ohio State or Purdue ECN versions.


How much trouble is it to port?

 The code is ~2000 lines for the server and ~1150 for the client.  Not too
 hard to read in ~3 hours.  It should work with a little push on any BSD type
 UNIX.


--
"When you find me here, at the end of my rope!"
kayessbee, Kevin Braunsdorf, ksb@cc.purdue.edu, pur-ee!ksb, purdue!ksb
